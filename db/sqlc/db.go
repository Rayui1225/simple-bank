// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package db

import (
	"context"
	"database/sql"
)

type DBTX interface {
	ExecContext(context.Context, string, ...interface{}) (sql.Result, error) //execute no return query
	PrepareContext(context.Context, string) (*sql.Stmt, error)  // prepare statement for reuse
	QueryContext(context.Context, string, ...interface{}) (*sql.Rows, error) //execute query for multiple rows returned values
	QueryRowContext(context.Context, string, ...interface{}) *sql.Row //execute query for one row returned value
}

func New(db DBTX) *Queries {
	return &Queries{db: db}
}

type Queries struct {
	db DBTX
}

func (q *Queries) WithTx(tx *sql.Tx) *Queries { //create a new queries instance use sql.Tx
	return &Queries{
		db: tx,
	}
}
